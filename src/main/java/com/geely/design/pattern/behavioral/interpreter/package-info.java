/**
解释器模式
 一、定义
    给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子
    为了解释一种语言，而为语言创建的解释器

 二、适用场景
    某个特定类型问题发生频率足够高时
    例如用脚本语言或编程语言处理日志时，很多服务都会产生大量的日志，需要对日志进行解析，从而作报表
    但各个服务日志的格式不一样，但数据里要素是相同的，可通过解释器解决该问题，解释不同的日志格式
    应用很少，一般使用开源解析工具包

 三、优点
    语法由很多类表示，容易改变及扩展此语言

 四、缺点
    语法规则数目太多时，增加了系统复杂类

 五、扩展


 六、源码
 {@link java.util.regex.Pattern} 正则解释器解释正则表达式
 {@link org.springframework.expression.ExpressionParser} EL表达式

 */
package com.geely.design.pattern.behavioral.interpreter;
